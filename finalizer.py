import sys
import os
from pathlib import Path 
import re
import random 


def readFile(path):
    print(path)
    '''
    f = open(path, "r")
    if f.mode == 'r':
        lines = f.readlines()

    f.close()
    return lines 
    '''
    return 0

# This is the script for cleaning data and writing it to txt in dir :/FinalizedData 

# Find all files in the benign 
# Find all files in the vulnerable 
# Iterate over 75% of them and write to train
# Iterate over 25% of them and write to test
# Use randomness to determine if B / V should be written to file 

train_split = 0.80
test_split = 0.20

benign_path = Path('./CompiledPrograms/Benign/Assembly')
vuln_path = Path('./CompiledPrograms/Vulns/Assembly')

list_of_files = os.listdir(benign_path)
number_files = len(list_of_files)
print(number_files)

    
# variable to index all data samlpes
index = 0
for filename in benign_path.rglob('*'):
    # Using this binary random to help randomize order of vulnerable and benign data samples 
    rand = random.randrange(0,2)

    # First 80% of files are written to train.txt
    print(rand)
    if index < train_split*number_files:
        print('train', index)
        # If 0, write a benign data sample first, then a vulnerable 
        # All files have the same name, so we can reuse just the filename and change the /dir/ name 
        if(rand == 0):

            lines = readFile(filename)


    # Last 20% of files are written to test.txt
    else:
        print('test',index)
    index += 1


