	.file	"test_file_3_904.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	ckyojnaisxvc
	mov	eax, 0
	call	nyeugcyrmhrg
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	qnrihtwqgbqb
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Copied string: %s\n"
	.text
	.globl	ckyojnaisxvc
	.type	ckyojnaisxvc, @function
ckyojnaisxvc:
	endbr64
	push	rbp
	mov	rbp, rsp
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	sub	rsp, 72
	mov	QWORD PTR -104[rbp], rdi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -56[rbp], rax
	xor	eax, eax
	mov	rax, QWORD PTR -104[rbp]
	mov	rdi, rax
	call	strlen@PLT
	cmp	rax, 14
	jbe	.L4
	mov	rax, rsp
	mov	rbx, rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rdi, rax
	call	strlen@PLT
	mov	rdx, rax
	sub	rdx, 1
	mov	QWORD PTR -88[rbp], rdx
	mov	r14, rax
	mov	r15d, 0
	mov	r12, rax
	mov	r13d, 0
	mov	edx, 16
	sub	rdx, 1
	add	rax, rdx
	mov	esi, 16
	mov	edx, 0
	div	rsi
	imul	rax, rax, 16
	mov	rcx, rax
	and	rcx, -4096
	mov	rdx, rsp
	sub	rdx, rcx
.L5:
	cmp	rsp, rdx
	je	.L6
	sub	rsp, 4096
	or	QWORD PTR 4088[rsp], 0
	jmp	.L5
.L6:
	mov	rdx, rax
	and	edx, 4095
	sub	rsp, rdx
	mov	rdx, rax
	and	edx, 4095
	test	rdx, rdx
	je	.L7
	and	eax, 4095
	sub	rax, 8
	add	rax, rsp
	or	QWORD PTR [rax], 0
.L7:
	mov	rax, rsp
	add	rax, 0
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR -104[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcpy@PLT
	mov	rax, QWORD PTR -80[rbp]
	mov	rsi, rax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	rsp, rbx
	jmp	.L10
.L4:
	mov	rdx, QWORD PTR -104[rbp]
	lea	rax, -70[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcpy@PLT
	lea	rax, -70[rbp]
	mov	rsi, rax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L10:
	nop
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L9
	call	__stack_chk_fail@PLT
.L9:
	lea	rsp, -40[rbp]
	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	pop	rbp
	ret
	.size	ckyojnaisxvc, .-ckyojnaisxvc
	.section	.rodata
.LC1:
	.string	"the"
.LC2:
	.string	"a"
.LC3:
	.string	"one"
.LC4:
	.string	"string"
.LC5:
	.string	"any"
	.text
	.globl	nyeugcyrmhrg
	.type	nyeugcyrmhrg, @function
nyeugcyrmhrg:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -18[rbp], 0
	mov	WORD PTR -10[rbp], 0
	lea	rax, .LC1[rip]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, .LC2[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, .LC3[rip]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, .LC4[rip]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, .LC5[rip]
	mov	QWORD PTR -32[rbp], rax
	lea	rax, -72[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, 1717986919
	shr	rdx, 32
	sar	edx
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -68[rbp], edx
	mov	ecx, DWORD PTR -68[rbp]
	mov	edx, ecx
	sal	edx, 2
	add	edx, ecx
	sub	eax, edx
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -68[rbp]
	cdqe
	mov	rcx, QWORD PTR -64[rbp+rax*8]
	lea	rax, -18[rbp]
	mov	edx, 10
	mov	rsi, rcx
	mov	rdi, rax
	call	strncpy@PLT
	lea	rax, -18[rbp]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -18[rbp]
	mov	esi, 10
	mov	rdi, rax
	call	fgets@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	ret
	.size	nyeugcyrmhrg, .-nyeugcyrmhrg
	.section	.rodata
.LC6:
	.string	"Hello mr/ms:       "
	.text
	.globl	qnrihtwqgbqb
	.type	qnrihtwqgbqb, @function
qnrihtwqgbqb:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR -104[rbp], rdi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC6[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, -84[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	mov	edx, eax
	movsx	rax, edx
	imul	rax, rax, 1717986919
	shr	rax, 32
	sar	eax, 4
	mov	ecx, edx
	sar	ecx, 31
	sub	eax, ecx
	mov	DWORD PTR -80[rbp], eax
	mov	ecx, DWORD PTR -80[rbp]
	mov	eax, ecx
	sal	eax, 2
	add	eax, ecx
	sal	eax, 3
	sub	edx, eax
	mov	DWORD PTR -80[rbp], edx
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, -2004318071
	shr	rdx, 32
	add	edx, eax
	sar	edx, 4
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -76[rbp], edx
	mov	edx, DWORD PTR -76[rbp]
	imul	edx, edx, 30
	sub	eax, edx
	mov	DWORD PTR -76[rbp], eax
	call	rand@PLT
	mov	edx, eax
	movsx	rax, edx
	imul	rax, rax, 1717986919
	shr	rax, 32
	sar	eax, 3
	mov	ecx, edx
	sar	ecx, 31
	sub	eax, ecx
	mov	DWORD PTR -72[rbp], eax
	mov	ecx, DWORD PTR -72[rbp]
	mov	eax, ecx
	sal	eax, 2
	add	eax, ecx
	sal	eax, 2
	sub	edx, eax
	mov	DWORD PTR -72[rbp], edx
	mov	edx, DWORD PTR -80[rbp]
	mov	eax, DWORD PTR -76[rbp]
	add	edx, eax
	mov	eax, DWORD PTR -72[rbp]
	add	eax, edx
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -80[rbp]
	sub	eax, DWORD PTR -76[rbp]
	sub	eax, DWORD PTR -72[rbp]
	mov	DWORD PTR -64[rbp], eax
	mov	edx, DWORD PTR -80[rbp]
	mov	eax, DWORD PTR -76[rbp]
	add	eax, edx
	sub	eax, DWORD PTR -72[rbp]
	mov	DWORD PTR -60[rbp], eax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -48[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
	mov	rdx, QWORD PTR -104[rbp]
	lea	rax, -48[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L14
	call	__stack_chk_fail@PLT
.L14:
	leave
	ret
	.size	qnrihtwqgbqb, .-qnrihtwqgbqb
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
