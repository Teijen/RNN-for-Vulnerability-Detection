	.file	"test_file_3_883.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	qqtyjfrsbcre
	mov	eax, 0
	call	pxltobqakjeu
	mov	eax, 0
	call	xfvufpmexnyz
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter your name :"
.LC1:
	.string	"final: %s %s"
	.text
	.globl	qqtyjfrsbcre
	.type	qqtyjfrsbcre, @function
qqtyjfrsbcre:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 7453010381983019591
	movabs	rdx, 7867542457899884659
	mov	QWORD PTR -176[rbp], rax
	mov	QWORD PTR -168[rbp], rdx
	mov	DWORD PTR -160[rbp], 14963
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -144[rbp]
	mov	esi, 40
	mov	rdi, rax
	call	fgets@PLT
	lea	rcx, -144[rbp]
	lea	rdx, -176[rbp]
	lea	rax, -96[rbp]
	lea	rsi, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	sprintf@PLT
	lea	rax, -96[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	qqtyjfrsbcre, .-qqtyjfrsbcre
	.section	.rodata
.LC2:
	.string	"%12s"
.LC3:
	.string	"You entered: %s\n"
	.text
	.globl	pxltobqakjeu
	.type	pxltobqakjeu, @function
pxltobqakjeu:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 8027420523743700328
	mov	QWORD PTR -20[rbp], rax
	mov	DWORD PTR -12[rbp], 1679844463
	mov	DWORD PTR -24[rbp], 10
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -28[rbp], 0
	jmp	.L6
.L9:
	mov	eax, DWORD PTR -28[rbp]
	cdqe
	movzx	eax, BYTE PTR -20[rbp+rax]
	cmp	al, 10
	jne	.L7
	mov	eax, DWORD PTR -28[rbp]
	cdqe
	mov	BYTE PTR -20[rbp+rax], 0
	jmp	.L8
.L7:
	add	DWORD PTR -28[rbp], 1
.L6:
	mov	eax, DWORD PTR -28[rbp]
	cmp	eax, DWORD PTR -24[rbp]
	jle	.L9
.L8:
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L10
	call	__stack_chk_fail@PLT
.L10:
	leave
	ret
	.size	pxltobqakjeu, .-pxltobqakjeu
	.section	.rodata
.LC4:
	.string	"%d, %d, %d, %d\n"
	.text
	.globl	xfvufpmexnyz
	.type	xfvufpmexnyz, @function
xfvufpmexnyz:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -52[rbp], 4
	mov	DWORD PTR -48[rbp], -5
	mov	DWORD PTR -44[rbp], 2
	mov	edx, DWORD PTR -52[rbp]
	mov	eax, DWORD PTR -48[rbp]
	add	edx, eax
	mov	eax, DWORD PTR -44[rbp]
	add	eax, edx
	mov	DWORD PTR -40[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	sub	eax, DWORD PTR -48[rbp]
	sub	eax, DWORD PTR -44[rbp]
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	cdq
	idiv	DWORD PTR -48[rbp]
	mov	edx, eax
	mov	eax, DWORD PTR -44[rbp]
	imul	eax, edx
	mov	DWORD PTR -32[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	imul	eax, DWORD PTR -48[rbp]
	cdq
	idiv	DWORD PTR -44[rbp]
	mov	DWORD PTR -28[rbp], eax
	mov	esi, DWORD PTR -28[rbp]
	mov	ecx, DWORD PTR -32[rbp]
	mov	edx, DWORD PTR -36[rbp]
	mov	eax, DWORD PTR -40[rbp]
	mov	r8d, esi
	mov	esi, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -23[rbp]
	mov	esi, 35
	mov	rdi, rax
	call	fgets@PLT
	lea	rax, -23[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	ret
	.size	xfvufpmexnyz, .-xfvufpmexnyz
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
