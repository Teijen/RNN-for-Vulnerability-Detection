	.file	"test_file_3_1229.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	tdailylyiflh
	mov	eax, 0
	call	feskijsrrgxh
	mov	eax, 0
	call	cisrwjzhexat
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
	.align 8
.LC0:
	.string	"These are the numbers: %d, %d, %d\n"
.LC1:
	.string	"Enter your name:"
.LC2:
	.string	"Hello: s%"
	.text
	.globl	tdailylyiflh
	.type	tdailylyiflh, @function
tdailylyiflh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -56[rbp], 4
	mov	DWORD PTR -52[rbp], 3
	mov	DWORD PTR -48[rbp], -2
	mov	edx, DWORD PTR -56[rbp]
	mov	eax, DWORD PTR -52[rbp]
	add	edx, eax
	mov	eax, DWORD PTR -48[rbp]
	add	eax, edx
	mov	DWORD PTR -44[rbp], eax
	mov	eax, DWORD PTR -56[rbp]
	imul	eax, DWORD PTR -52[rbp]
	mov	edx, DWORD PTR -48[rbp]
	imul	eax, edx
	mov	DWORD PTR -40[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	cdq
	idiv	DWORD PTR -48[rbp]
	mov	edx, eax
	mov	eax, DWORD PTR -56[rbp]
	add	eax, edx
	mov	DWORD PTR -36[rbp], eax
	mov	ecx, DWORD PTR -36[rbp]
	mov	edx, DWORD PTR -40[rbp]
	mov	eax, DWORD PTR -44[rbp]
	mov	esi, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, .LC1[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -32[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	gets@PLT
	lea	rax, -32[rbp]
	mov	rsi, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	tdailylyiflh, .-tdailylyiflh
	.section	.rodata
.LC3:
	.string	"Write your username: "
.LC4:
	.string	"Hello, %s"
	.text
	.globl	feskijsrrgxh
	.type	feskijsrrgxh, @function
feskijsrrgxh:
	endbr64
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -24[rbp], rax
	xor	eax, eax
	mov	rax, rsp
	mov	rbx, rax
	mov	DWORD PTR -44[rbp], 64
	mov	eax, DWORD PTR -44[rbp]
	cdqe
	sub	rax, 1
	mov	QWORD PTR -40[rbp], rax
	mov	eax, DWORD PTR -44[rbp]
	cdqe
	mov	r8, rax
	mov	r9d, 0
	mov	eax, DWORD PTR -44[rbp]
	cdqe
	mov	rsi, rax
	mov	edi, 0
	mov	eax, DWORD PTR -44[rbp]
	cdqe
	mov	edx, 16
	sub	rdx, 1
	add	rax, rdx
	mov	edi, 16
	mov	edx, 0
	div	rdi
	imul	rax, rax, 16
	mov	rcx, rax
	and	rcx, -4096
	mov	rdx, rsp
	sub	rdx, rcx
.L6:
	cmp	rsp, rdx
	je	.L7
	sub	rsp, 4096
	or	QWORD PTR 4088[rsp], 0
	jmp	.L6
.L7:
	mov	rdx, rax
	and	edx, 4095
	sub	rsp, rdx
	mov	rdx, rax
	and	edx, 4095
	test	rdx, rdx
	je	.L8
	and	eax, 4095
	sub	rax, 8
	add	rax, rsp
	or	QWORD PTR [rax], 0
.L8:
	mov	rax, rsp
	add	rax, 0
	mov	QWORD PTR -32[rbp], rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	mov	ecx, DWORD PTR -44[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	esi, ecx
	mov	rdi, rax
	call	fgets@PLT
	mov	rax, QWORD PTR -32[rbp]
	mov	rsi, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	rsp, rbx
	nop
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L9
	call	__stack_chk_fail@PLT
.L9:
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.size	feskijsrrgxh, .-feskijsrrgxh
	.section	.rodata
.LC5:
	.string	"Ender hexdecimal number: "
.LC6:
	.string	"%x"
.LC7:
	.string	"Hex %x as decimal: %d\n"
	.text
	.globl	cisrwjzhexat
	.type	cisrwjzhexat, @function
cisrwjzhexat:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -12[rbp]
	mov	rsi, rax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	edx, DWORD PTR -12[rbp]
	mov	eax, DWORD PTR -12[rbp]
	mov	esi, eax
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L11
	call	__stack_chk_fail@PLT
.L11:
	leave
	ret
	.size	cisrwjzhexat, .-cisrwjzhexat
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
