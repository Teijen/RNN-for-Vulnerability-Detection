	.file	"test_file_3_1841.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	eiytlelnfqwa
	mov	eax, 0
	call	hrsdwcjqkudo
	mov	eax, 0
	call	bfojvsbuecxe
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter two numbers to add :"
.LC1:
	.string	"%d%d"
.LC2:
	.string	"Total of the two :%d\n"
	.text
	.globl	eiytlelnfqwa
	.type	eiytlelnfqwa, @function
eiytlelnfqwa:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR -88[rbp], rdi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rdx, -68[rbp]
	lea	rax, -72[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	edx, DWORD PTR -72[rbp]
	mov	eax, DWORD PTR -68[rbp]
	add	eax, edx
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
.L5:
	call	getchar@PLT
	mov	DWORD PTR -72[rbp], eax
	mov	eax, DWORD PTR -72[rbp]
	cmp	eax, 10
	je	.L4
	mov	eax, DWORD PTR -72[rbp]
	cmp	eax, -1
	jne	.L5
.L4:
	mov	rax, QWORD PTR -88[rbp]
	mov	rdi, rax
	call	strlen@PLT
	mov	rdx, rax
	mov	rcx, QWORD PTR -88[rbp]
	lea	rax, -64[rbp]
	mov	rsi, rcx
	mov	rdi, rax
	call	memcpy@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L6
	call	__stack_chk_fail@PLT
.L6:
	leave
	ret
	.size	eiytlelnfqwa, .-eiytlelnfqwa
	.section	.rodata
.LC3:
	.string	"Hello!"
	.text
	.globl	hrsdwcjqkudo
	.type	hrsdwcjqkudo, @function
hrsdwcjqkudo:
	endbr64
	push	rbp
	mov	rbp, rsp
	lea	rax, .LC3[rip]
	mov	rdi, rax
	call	puts@PLT
	nop
	pop	rbp
	ret
	.size	hrsdwcjqkudo, .-hrsdwcjqkudo
	.section	.rodata
.LC4:
	.string	"Enter an alphabet: "
.LC5:
	.string	"%c"
.LC6:
	.string	"%c is a vowel."
.LC7:
	.string	"%c is a consonant."
	.text
	.globl	bfojvsbuecxe
	.type	bfojvsbuecxe, @function
bfojvsbuecxe:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -17[rbp]
	mov	rsi, rax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 97
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 101
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 105
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 111
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 117
	jne	.L10
.L9:
	mov	eax, 1
	jmp	.L11
.L10:
	mov	eax, 0
.L11:
	mov	DWORD PTR -16[rbp], eax
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 65
	je	.L12
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 69
	je	.L12
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 73
	je	.L12
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 79
	je	.L12
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 85
	jne	.L13
.L12:
	mov	eax, 1
	jmp	.L14
.L13:
	mov	eax, 0
.L14:
	mov	DWORD PTR -12[rbp], eax
	cmp	DWORD PTR -16[rbp], 0
	jne	.L15
	cmp	DWORD PTR -12[rbp], 0
	je	.L16
.L15:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	jmp	.L17
.L16:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L17:
	nop
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L18
	call	__stack_chk_fail@PLT
.L18:
	leave
	ret
	.size	bfojvsbuecxe, .-bfojvsbuecxe
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
