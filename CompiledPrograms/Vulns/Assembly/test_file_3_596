	.file	"test_file_3_596.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	avoaylvgqsvm
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	edx, 10
	mov	esi, 0
	mov	rdi, rax
	call	strtol@PLT
	mov	edx, eax
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	esi, edx
	mov	rdi, rax
	call	mrngwpdxgpep
	mov	eax, 0
	call	ueozzdnnmfyv
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"%s"
	.text
	.globl	avoaylvgqsvm
	.type	avoaylvgqsvm, @function
avoaylvgqsvm:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 2208
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -2192[rbp], 0
	mov	QWORD PTR -2184[rbp], 0
	mov	QWORD PTR -2176[rbp], 0
	mov	QWORD PTR -2168[rbp], 0
	mov	QWORD PTR -2160[rbp], 0
	mov	QWORD PTR -2152[rbp], 0
	mov	QWORD PTR -2144[rbp], 0
	mov	QWORD PTR -2136[rbp], 0
	mov	QWORD PTR -2128[rbp], 0
	mov	QWORD PTR -2120[rbp], 0
	mov	QWORD PTR -2112[rbp], 0
	mov	QWORD PTR -2104[rbp], 0
	mov	QWORD PTR -2096[rbp], 0
	mov	QWORD PTR -2088[rbp], 0
	mov	QWORD PTR -2080[rbp], 0
	mov	QWORD PTR -2072[rbp], 0
	lea	rax, -2192[rbp]
	mov	rdi, rax
	call	puts@PLT
	mov	QWORD PTR -2064[rbp], 0
	mov	QWORD PTR -2056[rbp], 0
	lea	rdx, -2048[rbp]
	mov	eax, 0
	mov	ecx, 254
	mov	rdi, rdx
	rep stosq
	lea	rax, -2192[rbp]
	mov	rsi, rax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	lea	rax, -2064[rbp]
	mov	edx, 2047
	mov	rsi, rax
	mov	rax, QWORD PTR __isoc99_scanf@GOTPCREL[rip]
	mov	rdi, rax
	mov	eax, 0
	call	read@PLT
	mov	DWORD PTR -2196[rbp], eax
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	avoaylvgqsvm, .-avoaylvgqsvm
	.section	.rodata
.LC1:
	.string	"Your string argument: %s\n"
.LC2:
	.string	"Your number argument: %d\n"
	.text
	.globl	mrngwpdxgpep
	.type	mrngwpdxgpep, @function
mrngwpdxgpep:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	QWORD PTR -8[rbp], rdi
	mov	DWORD PTR -12[rbp], esi
	mov	rax, QWORD PTR -8[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	eax, DWORD PTR -12[rbp]
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	leave
	ret
	.size	mrngwpdxgpep, .-mrngwpdxgpep
	.section	.rodata
.LC3:
	.string	"%d\n"
	.text
	.globl	ueozzdnnmfyv
	.type	ueozzdnnmfyv, @function
ueozzdnnmfyv:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	esi, 4
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -96[rbp]
	mov	esi, 80
	mov	rdi, rax
	call	fgets@PLT
	mov	eax, 0
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L8
	call	__stack_chk_fail@PLT
.L8:
	leave
	ret
	.size	ueozzdnnmfyv, .-ueozzdnnmfyv
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
