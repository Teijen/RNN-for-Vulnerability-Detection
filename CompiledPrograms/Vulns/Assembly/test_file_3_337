	.file	"test_file_3_337.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	unnplphejkbb
	mov	eax, 0
	call	xsinehmjnsfr
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	qnrihtwqgbqb
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"How large is radius?"
.LC1:
	.string	"%d"
.LC3:
	.string	"Area of circle is: %.4f\n"
	.text
	.globl	unnplphejkbb
	.type	unnplphejkbb, @function
unnplphejkbb:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -12[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	edx, DWORD PTR -12[rbp]
	mov	eax, DWORD PTR -12[rbp]
	imul	eax, edx
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	movsd	xmm0, QWORD PTR .LC2[rip]
	mulsd	xmm1, xmm0
	movq	rax, xmm1
	movq	xmm0, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	unnplphejkbb, .-unnplphejkbb
	.section	.rodata
.LC4:
	.string	"Enter dividend: "
.LC5:
	.string	"Enter divisor: "
.LC6:
	.string	"Quotient = %d\n"
.LC7:
	.string	"Remainder = %d"
	.text
	.globl	xsinehmjnsfr
	.type	xsinehmjnsfr, @function
xsinehmjnsfr:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -24[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	eax, DWORD PTR -24[rbp]
	mov	ecx, DWORD PTR -20[rbp]
	cdq
	idiv	ecx
	mov	DWORD PTR -16[rbp], eax
	mov	eax, DWORD PTR -24[rbp]
	mov	ecx, DWORD PTR -20[rbp]
	cdq
	idiv	ecx
	mov	DWORD PTR -12[rbp], edx
	mov	eax, DWORD PTR -16[rbp]
	mov	esi, eax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	eax, DWORD PTR -12[rbp]
	mov	esi, eax
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L6
	call	__stack_chk_fail@PLT
.L6:
	leave
	ret
	.size	xsinehmjnsfr, .-xsinehmjnsfr
	.section	.rodata
.LC8:
	.string	"Hello mr/ms:       "
	.text
	.globl	qnrihtwqgbqb
	.type	qnrihtwqgbqb, @function
qnrihtwqgbqb:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR -104[rbp], rdi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC8[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, -84[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	mov	edx, eax
	movsx	rax, edx
	imul	rax, rax, 1717986919
	shr	rax, 32
	sar	eax, 4
	mov	ecx, edx
	sar	ecx, 31
	sub	eax, ecx
	mov	DWORD PTR -80[rbp], eax
	mov	ecx, DWORD PTR -80[rbp]
	mov	eax, ecx
	sal	eax, 2
	add	eax, ecx
	sal	eax, 3
	sub	edx, eax
	mov	DWORD PTR -80[rbp], edx
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, -2004318071
	shr	rdx, 32
	add	edx, eax
	sar	edx, 4
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -76[rbp], edx
	mov	edx, DWORD PTR -76[rbp]
	imul	edx, edx, 30
	sub	eax, edx
	mov	DWORD PTR -76[rbp], eax
	call	rand@PLT
	mov	edx, eax
	movsx	rax, edx
	imul	rax, rax, 1717986919
	shr	rax, 32
	sar	eax, 3
	mov	ecx, edx
	sar	ecx, 31
	sub	eax, ecx
	mov	DWORD PTR -72[rbp], eax
	mov	ecx, DWORD PTR -72[rbp]
	mov	eax, ecx
	sal	eax, 2
	add	eax, ecx
	sal	eax, 2
	sub	edx, eax
	mov	DWORD PTR -72[rbp], edx
	mov	edx, DWORD PTR -80[rbp]
	mov	eax, DWORD PTR -76[rbp]
	add	edx, eax
	mov	eax, DWORD PTR -72[rbp]
	add	eax, edx
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -80[rbp]
	sub	eax, DWORD PTR -76[rbp]
	sub	eax, DWORD PTR -72[rbp]
	mov	DWORD PTR -64[rbp], eax
	mov	edx, DWORD PTR -80[rbp]
	mov	eax, DWORD PTR -76[rbp]
	add	eax, edx
	sub	eax, DWORD PTR -72[rbp]
	mov	DWORD PTR -60[rbp], eax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -48[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
	mov	rdx, QWORD PTR -104[rbp]
	lea	rax, -48[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L8
	call	__stack_chk_fail@PLT
.L8:
	leave
	ret
	.size	qnrihtwqgbqb, .-qnrihtwqgbqb
	.section	.rodata
	.align 8
.LC2:
	.long	1413754136
	.long	1074340347
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
