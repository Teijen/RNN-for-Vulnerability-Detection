	.file	"test_file_3_1879.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	gvhkhcuurjmt
	mov	eax, 0
	call	akuyhosvenqa
	mov	eax, 0
	call	pxltobqakjeu
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.globl	gvhkhcuurjmt
	.type	gvhkhcuurjmt, @function
gvhkhcuurjmt:
	endbr64
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	mov	QWORD PTR -40[rbp], rdi
	mov	DWORD PTR -28[rbp], 10
	mov	DWORD PTR -24[rbp], 20
	mov	edx, DWORD PTR -28[rbp]
	mov	eax, DWORD PTR -24[rbp]
	add	eax, edx
	mov	DWORD PTR -20[rbp], eax
	mov	DWORD PTR -32[rbp], 0
	jmp	.L4
.L5:
	mov	eax, DWORD PTR -32[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edi, eax
	call	putchar@PLT
	add	DWORD PTR -32[rbp], 1
.L4:
	mov	eax, DWORD PTR -32[rbp]
	movsx	rbx, eax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdi, rax
	call	strlen@PLT
	cmp	rbx, rax
	jb	.L5
	mov	edi, 10
	call	putchar@PLT
	nop
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.size	gvhkhcuurjmt, .-gvhkhcuurjmt
	.section	.rodata
.LC0:
	.string	"A"
.LC1:
	.string	"B"
.LC2:
	.string	"C"
.LC3:
	.string	"Final string: %s\n"
	.text
	.globl	akuyhosvenqa
	.type	akuyhosvenqa, @function
akuyhosvenqa:
	endbr64
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	BYTE PTR -117[rbp], al
	lea	rax, .LC1[rip]
	mov	BYTE PTR -116[rbp], al
	lea	rax, .LC2[rip]
	mov	BYTE PTR -115[rbp], al
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -112[rbp]
	mov	esi, 100
	mov	rdi, rax
	call	fgets@PLT
	lea	rdx, -112[rbp]
	lea	rax, -117[rbp]
	lea	rcx, .LC3[rip]
	mov	rsi, rcx
	mov	rdi, rax
	mov	eax, 0
	call	sprintf@PLT
	lea	rax, -117[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L7
	call	__stack_chk_fail@PLT
.L7:
	leave
	ret
	.size	akuyhosvenqa, .-akuyhosvenqa
	.section	.rodata
.LC4:
	.string	"%12s"
.LC5:
	.string	"You entered: %s\n"
	.text
	.globl	pxltobqakjeu
	.type	pxltobqakjeu, @function
pxltobqakjeu:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 8027420523743700328
	mov	QWORD PTR -20[rbp], rax
	mov	DWORD PTR -12[rbp], 1679844463
	mov	DWORD PTR -24[rbp], 10
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -28[rbp], 0
	jmp	.L9
.L12:
	mov	eax, DWORD PTR -28[rbp]
	cdqe
	movzx	eax, BYTE PTR -20[rbp+rax]
	cmp	al, 10
	jne	.L10
	mov	eax, DWORD PTR -28[rbp]
	cdqe
	mov	BYTE PTR -20[rbp+rax], 0
	jmp	.L11
.L10:
	add	DWORD PTR -28[rbp], 1
.L9:
	mov	eax, DWORD PTR -28[rbp]
	cmp	eax, DWORD PTR -24[rbp]
	jle	.L12
.L11:
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L13
	call	__stack_chk_fail@PLT
.L13:
	leave
	ret
	.size	pxltobqakjeu, .-pxltobqakjeu
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
