	.file	"test_file_3_633.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	hzlvjfetptto
	mov	eax, 0
	call	agfrdqbfvanm
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	kikfwgfupgxg
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter number :"
.LC1:
	.string	"%lld"
.LC2:
	.string	"%d,"
	.text
	.globl	hzlvjfetptto
	.type	hzlvjfetptto, @function
hzlvjfetptto:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -16[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -20[rbp], 0
	jmp	.L4
.L6:
	mov	eax, DWORD PTR -20[rbp]
	and	eax, 1
	test	eax, eax
	jne	.L5
	mov	eax, DWORD PTR -20[rbp]
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L5:
	add	DWORD PTR -20[rbp], 1
.L4:
	mov	eax, DWORD PTR -20[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -16[rbp]
	cmp	rdx, rax
	jl	.L6
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L7
	call	__stack_chk_fail@PLT
.L7:
	leave
	ret
	.size	hzlvjfetptto, .-hzlvjfetptto
	.section	.rodata
.LC3:
	.string	"Hello!"
.LC4:
	.string	"How are you?"
.LC5:
	.string	"I'am great!?"
.LC6:
	.string	"Have a nice day?"
.LC7:
	.string	"Goodbye!"
	.text
	.globl	agfrdqbfvanm
	.type	agfrdqbfvanm, @function
agfrdqbfvanm:
	endbr64
	push	rbp
	mov	rbp, rsp
	lea	rax, .LC3[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC4[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC5[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC6[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC7[rip]
	mov	rdi, rax
	call	puts@PLT
	nop
	pop	rbp
	ret
	.size	agfrdqbfvanm, .-agfrdqbfvanm
	.section	.rodata
.LC8:
	.string	"the"
.LC9:
	.string	"a"
.LC10:
	.string	"one"
.LC11:
	.string	"some "
.LC12:
	.string	"any"
	.text
	.globl	kikfwgfupgxg
	.type	kikfwgfupgxg, @function
kikfwgfupgxg:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR -88[rbp], rdi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -18[rbp], 0
	mov	WORD PTR -10[rbp], 0
	lea	rax, .LC8[rip]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, .LC9[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, .LC10[rip]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, .LC11[rip]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, .LC12[rip]
	mov	QWORD PTR -32[rbp], rax
	call	rand@PLT
	cdq
	shr	edx, 30
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	js	.L12
	cmp	DWORD PTR -68[rbp], 4
	jg	.L12
	mov	eax, DWORD PTR -68[rbp]
	cdqe
	mov	rdx, QWORD PTR -64[rbp+rax*8]
	lea	rax, -18[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
	mov	rdx, QWORD PTR -88[rbp]
	lea	rax, -18[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
.L12:
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L11
	call	__stack_chk_fail@PLT
.L11:
	leave
	ret
	.size	kikfwgfupgxg, .-kikfwgfupgxg
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
