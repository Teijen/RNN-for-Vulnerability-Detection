	.file	"test_file_3_1864.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	fmhzuinagzwq
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	edx, 10
	mov	esi, 0
	mov	rdi, rax
	call	strtol@PLT
	mov	edi, eax
	call	nhuwvnktrfhj
	mov	eax, 0
	call	cgsajkqojmuc
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Length of the string: %d\n"
	.text
	.globl	fmhzuinagzwq
	.type	fmhzuinagzwq, @function
fmhzuinagzwq:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 7885065666585129552
	movabs	rdx, 7359008686475800169
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -24[rbp], rdx
	mov	WORD PTR -16[rbp], 28277
	mov	BYTE PTR -14[rbp], 0
	mov	DWORD PTR -36[rbp], 0
	jmp	.L4
.L5:
	add	DWORD PTR -36[rbp], 1
.L4:
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	movzx	eax, BYTE PTR -32[rbp+rax]
	test	al, al
	jne	.L5
	mov	eax, DWORD PTR -36[rbp]
	mov	esi, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L6
	call	__stack_chk_fail@PLT
.L6:
	leave
	ret
	.size	fmhzuinagzwq, .-fmhzuinagzwq
	.section	.rodata
.LC1:
	.string	"%d\n"
.LC2:
	.string	"Enter your full name: "
.LC3:
	.string	"Copied string: %s\n"
	.text
	.globl	nhuwvnktrfhj
	.type	nhuwvnktrfhj, @function
nhuwvnktrfhj:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 304
	mov	DWORD PTR -292[rbp], edi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	eax, DWORD PTR -292[rbp]
	cdqe
	mov	rdi, rax
	call	malloc@PLT
	mov	QWORD PTR -280[rbp], rax
	mov	esi, 8
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, .LC2[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -272[rbp]
	mov	esi, 256
	mov	rdi, rax
	call	fgets@PLT
	mov	BYTE PTR -272[rbp], 65
	mov	BYTE PTR -271[rbp], 66
	mov	BYTE PTR -270[rbp], 67
	lea	rax, -272[rbp]
	mov	rdi, rax
	call	strlen@PLT
	mov	rdx, rax
	lea	rcx, -272[rbp]
	mov	rax, QWORD PTR -280[rbp]
	mov	rsi, rcx
	mov	rdi, rax
	call	strncpy@PLT
	mov	rax, QWORD PTR -280[rbp]
	mov	rsi, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	rax, QWORD PTR -280[rbp]
	mov	rdi, rax
	call	free@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L8
	call	__stack_chk_fail@PLT
.L8:
	leave
	ret
	.size	nhuwvnktrfhj, .-nhuwvnktrfhj
	.section	.rodata
.LC4:
	.string	"%ld\n"
.LC5:
	.string	"%d : %ld\n"
.LC6:
	.string	"Reveresed: %s\n"
	.text
	.globl	cgsajkqojmuc
	.type	cgsajkqojmuc, @function
cgsajkqojmuc:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -13[rbp], 1280066888
	mov	BYTE PTR -9[rbp], 79
	lea	rax, -13[rbp]
	mov	rdi, rax
	call	strlen@PLT
	mov	rsi, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	DWORD PTR -20[rbp], 1
	jmp	.L10
.L11:
	mov	eax, DWORD PTR -20[rbp]
	cdqe
	mov	edx, 4
	sub	rdx, rax
	mov	eax, DWORD PTR -20[rbp]
	mov	esi, eax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	eax, DWORD PTR -20[rbp]
	movsx	rdx, eax
	mov	eax, 5
	sub	rax, rdx
	movzx	edx, BYTE PTR -13[rbp+rax]
	mov	eax, DWORD PTR -20[rbp]
	cdqe
	mov	BYTE PTR -13[rbp+rax], dl
	add	DWORD PTR -20[rbp], 1
.L10:
	mov	eax, DWORD PTR -20[rbp]
	cmp	eax, 1
	jbe	.L11
	lea	rax, -13[rbp]
	mov	rsi, rax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	ret
	.size	cgsajkqojmuc, .-cgsajkqojmuc
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
