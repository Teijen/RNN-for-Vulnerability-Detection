	.file	"test_file_3_1095.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	xfvufpmexnyz
	mov	eax, 0
	call	bfojvsbuecxe
	mov	eax, 0
	call	ejvyabvcuyde
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"%d, %d, %d, %d\n"
	.text
	.globl	xfvufpmexnyz
	.type	xfvufpmexnyz, @function
xfvufpmexnyz:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -52[rbp], 4
	mov	DWORD PTR -48[rbp], -5
	mov	DWORD PTR -44[rbp], 2
	mov	edx, DWORD PTR -52[rbp]
	mov	eax, DWORD PTR -48[rbp]
	add	edx, eax
	mov	eax, DWORD PTR -44[rbp]
	add	eax, edx
	mov	DWORD PTR -40[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	sub	eax, DWORD PTR -48[rbp]
	sub	eax, DWORD PTR -44[rbp]
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	cdq
	idiv	DWORD PTR -48[rbp]
	mov	edx, eax
	mov	eax, DWORD PTR -44[rbp]
	imul	eax, edx
	mov	DWORD PTR -32[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	imul	eax, DWORD PTR -48[rbp]
	cdq
	idiv	DWORD PTR -44[rbp]
	mov	DWORD PTR -28[rbp], eax
	mov	esi, DWORD PTR -28[rbp]
	mov	ecx, DWORD PTR -32[rbp]
	mov	edx, DWORD PTR -36[rbp]
	mov	eax, DWORD PTR -40[rbp]
	mov	r8d, esi
	mov	esi, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -23[rbp]
	mov	esi, 35
	mov	rdi, rax
	call	fgets@PLT
	lea	rax, -23[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	xfvufpmexnyz, .-xfvufpmexnyz
	.section	.rodata
.LC1:
	.string	"Enter an alphabet: "
.LC2:
	.string	"%c"
.LC3:
	.string	"%c is a vowel."
.LC4:
	.string	"%c is a consonant."
	.text
	.globl	bfojvsbuecxe
	.type	bfojvsbuecxe, @function
bfojvsbuecxe:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -17[rbp]
	mov	rsi, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 97
	je	.L6
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 101
	je	.L6
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 105
	je	.L6
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 111
	je	.L6
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 117
	jne	.L7
.L6:
	mov	eax, 1
	jmp	.L8
.L7:
	mov	eax, 0
.L8:
	mov	DWORD PTR -16[rbp], eax
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 65
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 69
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 73
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 79
	je	.L9
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 85
	jne	.L10
.L9:
	mov	eax, 1
	jmp	.L11
.L10:
	mov	eax, 0
.L11:
	mov	DWORD PTR -12[rbp], eax
	cmp	DWORD PTR -16[rbp], 0
	jne	.L12
	cmp	DWORD PTR -12[rbp], 0
	je	.L13
.L12:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	jmp	.L14
.L13:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L14:
	nop
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L15
	call	__stack_chk_fail@PLT
.L15:
	leave
	ret
	.size	bfojvsbuecxe, .-bfojvsbuecxe
	.section	.rodata
.LC5:
	.string	"Enter two numbers: "
.LC6:
	.string	"%lf %lf"
.LC7:
	.string	"Product = %.2lf"
	.text
	.globl	ejvyabvcuyde
	.type	ejvyabvcuyde, @function
ejvyabvcuyde:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rdx, -24[rbp]
	lea	rax, -32[rbp]
	mov	rsi, rax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movsd	xmm1, QWORD PTR -32[rbp]
	movsd	xmm0, QWORD PTR -24[rbp]
	mulsd	xmm0, xmm1
	movsd	QWORD PTR -16[rbp], xmm0
	mov	rax, QWORD PTR -16[rbp]
	movq	xmm0, rax
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L17
	call	__stack_chk_fail@PLT
.L17:
	leave
	ret
	.size	ejvyabvcuyde, .-ejvyabvcuyde
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
