	.file	"test_file_3_791.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	qfvuwpnppjhy
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	edx, 10
	mov	esi, 0
	mov	rdi, rax
	call	strtol@PLT
	mov	edi, eax
	call	uiwjurnzzcev
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	atof@PLT
	pxor	xmm1, xmm1
	cvtsd2ss	xmm1, xmm0
	movd	eax, xmm1
	movd	xmm0, eax
	call	gmdnzfeepbzc
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"%ld\n"
	.text
	.globl	qfvuwpnppjhy
	.type	qfvuwpnppjhy, @function
qfvuwpnppjhy:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 48
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	esi, 20
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -32[rbp]
	mov	edx, 20
	mov	esi, 97
	mov	rdi, rax
	call	memset@PLT
	lea	rax, -32[rbp]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -32[rbp]
	mov	esi, 20
	mov	rdi, rax
	call	fgets@PLT
	mov	DWORD PTR -36[rbp], 15
	mov	rax, QWORD PTR stdin[rip]
	mov	ecx, DWORD PTR -36[rbp]
	mov	edx, 20
	sub	edx, ecx
	mov	esi, edx
	lea	rcx, -32[rbp]
	mov	edx, DWORD PTR -36[rbp]
	movsx	rdx, edx
	add	rcx, rdx
	mov	rdx, rax
	mov	rdi, rcx
	call	fgets@PLT
	lea	rax, -32[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	qfvuwpnppjhy, .-qfvuwpnppjhy
	.section	.rodata
.LC1:
	.string	"Total bytes available %d\n"
.LC2:
	.string	"Enter your input"
	.text
	.globl	uiwjurnzzcev
	.type	uiwjurnzzcev, @function
uiwjurnzzcev:
	endbr64
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 56
	mov	DWORD PTR -52[rbp], edi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -24[rbp], rax
	xor	eax, eax
	mov	rax, rsp
	mov	rbx, rax
	mov	ecx, DWORD PTR -52[rbp]
	movsx	rax, ecx
	sub	rax, 1
	mov	QWORD PTR -40[rbp], rax
	movsx	rax, ecx
	mov	r10, rax
	mov	r11d, 0
	movsx	rax, ecx
	mov	r8, rax
	mov	r9d, 0
	movsx	rax, ecx
	mov	edx, 16
	sub	rdx, 1
	add	rax, rdx
	mov	edi, 16
	mov	edx, 0
	div	rdi
	imul	rax, rax, 16
	mov	rsi, rax
	and	rsi, -4096
	mov	rdx, rsp
	sub	rdx, rsi
.L6:
	cmp	rsp, rdx
	je	.L7
	sub	rsp, 4096
	or	QWORD PTR 4088[rsp], 0
	jmp	.L6
.L7:
	mov	rdx, rax
	and	edx, 4095
	sub	rsp, rdx
	mov	rdx, rax
	and	edx, 4095
	test	rdx, rdx
	je	.L8
	and	eax, 4095
	sub	rax, 8
	add	rax, rsp
	or	QWORD PTR [rax], 0
.L8:
	mov	rax, rsp
	add	rax, 0
	mov	QWORD PTR -32[rbp], rax
	movsx	rax, ecx
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, .LC2[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -52[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -32[rbp]
	mov	esi, ecx
	mov	rdi, rax
	call	fgets@PLT
	mov	rsp, rbx
	nop
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L9
	call	__stack_chk_fail@PLT
.L9:
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.size	uiwjurnzzcev, .-uiwjurnzzcev
	.section	.rodata
	.align 8
.LC4:
	.string	"Radius of circle with circuference %f:\n %f\n"
	.text
	.globl	gmdnzfeepbzc
	.type	gmdnzfeepbzc, @function
gmdnzfeepbzc:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	movss	DWORD PTR -20[rbp], xmm0
	pxor	xmm0, xmm0
	cvtss2sd	xmm0, DWORD PTR -20[rbp]
	movsd	xmm1, QWORD PTR .LC3[rip]
	divsd	xmm0, xmm1
	cvtsd2ss	xmm0, xmm0
	movss	DWORD PTR -4[rbp], xmm0
	pxor	xmm0, xmm0
	cvtss2sd	xmm0, DWORD PTR -4[rbp]
	pxor	xmm2, xmm2
	cvtss2sd	xmm2, DWORD PTR -20[rbp]
	movq	rax, xmm2
	movapd	xmm1, xmm0
	movq	xmm0, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 2
	call	printf@PLT
	nop
	leave
	ret
	.size	gmdnzfeepbzc, .-gmdnzfeepbzc
	.section	.rodata
	.align 8
.LC3:
	.long	1413754136
	.long	1075388923
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
