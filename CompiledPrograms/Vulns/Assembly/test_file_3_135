	.file	"test_file_3_135.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	nyeugcyrmhrg
	mov	eax, 0
	call	pacnceapbiua
	mov	eax, 0
	call	qlpaezcmkarp
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"the"
.LC1:
	.string	"a"
.LC2:
	.string	"one"
.LC3:
	.string	"string"
.LC4:
	.string	"any"
	.text
	.globl	nyeugcyrmhrg
	.type	nyeugcyrmhrg, @function
nyeugcyrmhrg:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -18[rbp], 0
	mov	WORD PTR -10[rbp], 0
	lea	rax, .LC0[rip]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, .LC1[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, .LC2[rip]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, .LC3[rip]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, .LC4[rip]
	mov	QWORD PTR -32[rbp], rax
	lea	rax, -72[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, 1717986919
	shr	rdx, 32
	sar	edx
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -68[rbp], edx
	mov	ecx, DWORD PTR -68[rbp]
	mov	edx, ecx
	sal	edx, 2
	add	edx, ecx
	sub	eax, edx
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -68[rbp]
	cdqe
	mov	rcx, QWORD PTR -64[rbp+rax*8]
	lea	rax, -18[rbp]
	mov	edx, 10
	mov	rsi, rcx
	mov	rdi, rax
	call	strncpy@PLT
	lea	rax, -18[rbp]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -18[rbp]
	mov	esi, 10
	mov	rdi, rax
	call	fgets@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	nyeugcyrmhrg, .-nyeugcyrmhrg
	.section	.rodata
.LC5:
	.string	"Enter any number "
.LC6:
	.string	"%d"
.LC7:
	.string	"Enter any String "
.LC8:
	.string	"%s"
.LC9:
	.string	"number = %d, string = %s\n"
	.text
	.globl	pacnceapbiua
	.type	pacnceapbiua, @function
pacnceapbiua:
	endbr64
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -116[rbp]
	mov	rsi, rax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	lea	rax, .LC7[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -112[rbp]
	mov	rsi, rax
	lea	rax, .LC8[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	eax, DWORD PTR -116[rbp]
	lea	rdx, -112[rbp]
	mov	esi, eax
	lea	rax, .LC9[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L6
	call	__stack_chk_fail@PLT
.L6:
	leave
	ret
	.size	pacnceapbiua, .-pacnceapbiua
	.section	.rodata
.LC10:
	.string	"Size of int: %ld bytes\n"
.LC11:
	.string	"Size of float: %ld bytes\n"
.LC12:
	.string	"Size of double: %ld bytes\n"
.LC13:
	.string	"Size of char: %ld byte\n"
	.text
	.globl	qlpaezcmkarp
	.type	qlpaezcmkarp, @function
qlpaezcmkarp:
	endbr64
	push	rbp
	mov	rbp, rsp
	mov	esi, 4
	lea	rax, .LC10[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	esi, 4
	lea	rax, .LC11[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	esi, 8
	lea	rax, .LC12[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	mov	esi, 1
	lea	rax, .LC13[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	pop	rbp
	ret
	.size	qlpaezcmkarp, .-qlpaezcmkarp
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
