	.file	"test_file_3_1103.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	wpfmvqfnircf
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	wwudzaktnwvo
	mov	eax, 0
	call	goaztayvxlif
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter number :"
.LC1:
	.string	"%lld"
.LC2:
	.string	"%d,"
	.text
	.globl	wpfmvqfnircf
	.type	wpfmvqfnircf, @function
wpfmvqfnircf:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -16[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -20[rbp], 0
	jmp	.L4
.L6:
	mov	eax, DWORD PTR -20[rbp]
	and	eax, 1
	test	eax, eax
	je	.L5
	mov	eax, DWORD PTR -20[rbp]
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L5:
	add	DWORD PTR -20[rbp], 1
.L4:
	mov	eax, DWORD PTR -20[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -16[rbp]
	cmp	rdx, rax
	jl	.L6
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L7
	call	__stack_chk_fail@PLT
.L7:
	leave
	ret
	.size	wpfmvqfnircf, .-wpfmvqfnircf
	.section	.rodata
.LC3:
	.string	"%s"
	.text
	.globl	wwudzaktnwvo
	.type	wwudzaktnwvo, @function
wwudzaktnwvo:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR -152[rbp], rdi
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, -140[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, 1374389535
	shr	rdx, 32
	sar	edx, 4
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -136[rbp], edx
	mov	edx, DWORD PTR -136[rbp]
	imul	edx, edx, 50
	sub	eax, edx
	mov	DWORD PTR -136[rbp], eax
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, -368140053
	shr	rdx, 32
	add	edx, eax
	sar	edx, 6
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -132[rbp], edx
	mov	edx, DWORD PTR -132[rbp]
	imul	edx, edx, 70
	sub	eax, edx
	mov	DWORD PTR -132[rbp], eax
	call	rand@PLT
	mov	edx, eax
	movsx	rax, edx
	imul	rax, rax, 1717986919
	shr	rax, 32
	sar	eax, 2
	mov	ecx, edx
	sar	ecx, 31
	sub	eax, ecx
	mov	DWORD PTR -128[rbp], eax
	mov	ecx, DWORD PTR -128[rbp]
	mov	eax, ecx
	sal	eax, 2
	add	eax, ecx
	add	eax, eax
	sub	edx, eax
	mov	DWORD PTR -128[rbp], edx
	mov	edx, DWORD PTR -136[rbp]
	mov	eax, DWORD PTR -132[rbp]
	add	edx, eax
	mov	eax, DWORD PTR -128[rbp]
	add	eax, edx
	mov	DWORD PTR -124[rbp], eax
	mov	eax, DWORD PTR -136[rbp]
	sub	eax, DWORD PTR -132[rbp]
	sub	eax, DWORD PTR -128[rbp]
	mov	DWORD PTR -120[rbp], eax
	mov	edx, DWORD PTR -136[rbp]
	mov	eax, DWORD PTR -132[rbp]
	add	eax, edx
	sub	eax, DWORD PTR -128[rbp]
	mov	DWORD PTR -116[rbp], eax
	mov	rdx, QWORD PTR -152[rbp]
	lea	rax, -112[rbp]
	lea	rcx, .LC3[rip]
	mov	rsi, rcx
	mov	rdi, rax
	mov	eax, 0
	call	sprintf@PLT
	lea	rax, -112[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L9
	call	__stack_chk_fail@PLT
.L9:
	leave
	ret
	.size	wwudzaktnwvo, .-wwudzaktnwvo
	.section	.rodata
	.align 8
.LC4:
	.string	"Write two numbers to subtract: "
.LC5:
	.string	"%d%d"
.LC6:
	.string	"First - second : %d\n"
	.text
	.globl	goaztayvxlif
	.type	goaztayvxlif, @function
goaztayvxlif:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rdx, -12[rbp]
	lea	rax, -16[rbp]
	mov	rsi, rax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	eax, DWORD PTR -16[rbp]
	mov	edx, DWORD PTR -12[rbp]
	sub	eax, edx
	mov	esi, eax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
.L12:
	call	getchar@PLT
	mov	DWORD PTR -16[rbp], eax
	mov	eax, DWORD PTR -16[rbp]
	cmp	eax, 10
	je	.L14
	mov	eax, DWORD PTR -16[rbp]
	cmp	eax, -1
	jne	.L12
.L14:
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L13
	call	__stack_chk_fail@PLT
.L13:
	leave
	ret
	.size	goaztayvxlif, .-goaztayvxlif
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
