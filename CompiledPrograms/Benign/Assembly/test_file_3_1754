	.file	"test_file_3_1754.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	wjapwoqpxqcv
	mov	eax, 0
	call	ycumhbjkobjs
	mov	eax, 0
	call	azlvpnldpdww
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Number of characters: %d \n"
	.text
	.globl	wjapwoqpxqcv
	.type	wjapwoqpxqcv, @function
wjapwoqpxqcv:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	QWORD PTR -8[rbp], rdi
	mov	rax, QWORD PTR -8[rbp]
	mov	rdi, rax
	call	strlen@PLT
	mov	rsi, rax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	leave
	ret
	.size	wjapwoqpxqcv, .-wjapwoqpxqcv
	.section	.rodata
.LC1:
	.string	"Enter three numbers: "
.LC2:
	.string	"%lf %lf %lf"
.LC3:
	.string	"%.2lf is the largest number."
	.text
	.globl	ycumhbjkobjs
	.type	ycumhbjkobjs, @function
ycumhbjkobjs:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rcx, -16[rbp]
	lea	rdx, -24[rbp]
	lea	rax, -32[rbp]
	mov	rsi, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movsd	xmm0, QWORD PTR -32[rbp]
	movsd	xmm1, QWORD PTR -24[rbp]
	comisd	xmm0, xmm1
	jb	.L16
	movsd	xmm0, QWORD PTR -32[rbp]
	movsd	xmm1, QWORD PTR -16[rbp]
	comisd	xmm0, xmm1
	jb	.L17
	mov	rax, QWORD PTR -32[rbp]
	movq	xmm0, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	jmp	.L19
.L17:
	mov	rax, QWORD PTR -16[rbp]
	movq	xmm0, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	jmp	.L19
.L16:
	movsd	xmm0, QWORD PTR -24[rbp]
	movsd	xmm1, QWORD PTR -16[rbp]
	comisd	xmm0, xmm1
	jb	.L18
	mov	rax, QWORD PTR -24[rbp]
	movq	xmm0, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	jmp	.L19
.L18:
	mov	rax, QWORD PTR -16[rbp]
	movq	xmm0, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
.L19:
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	ret
	.size	ycumhbjkobjs, .-ycumhbjkobjs
	.section	.rodata
.LC4:
	.string	"Enter two numbers: "
.LC5:
	.string	"%lf %lf"
.LC6:
	.string	"Product = %.2lf"
	.text
	.globl	azlvpnldpdww
	.type	azlvpnldpdww, @function
azlvpnldpdww:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rdx, -24[rbp]
	lea	rax, -32[rbp]
	mov	rsi, rax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movsd	xmm1, QWORD PTR -32[rbp]
	movsd	xmm0, QWORD PTR -24[rbp]
	mulsd	xmm0, xmm1
	movsd	QWORD PTR -16[rbp], xmm0
	mov	rax, QWORD PTR -16[rbp]
	movq	xmm0, rax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L21
	call	__stack_chk_fail@PLT
.L21:
	leave
	ret
	.size	azlvpnldpdww, .-azlvpnldpdww
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
