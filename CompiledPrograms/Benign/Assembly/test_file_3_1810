	.file	"test_file_3_1810.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	cyqxorzbrxuh
	mov	eax, 0
	call	akqymshefhhe
	mov	eax, 0
	call	bimvvmxtypwo
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter an alphabet: "
.LC1:
	.string	"%c"
.LC2:
	.string	"%c is a vowel."
.LC3:
	.string	"%c is a consonant."
	.text
	.globl	cyqxorzbrxuh
	.type	cyqxorzbrxuh, @function
cyqxorzbrxuh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -17[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 97
	je	.L4
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 101
	je	.L4
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 105
	je	.L4
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 111
	je	.L4
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 117
	jne	.L5
.L4:
	mov	eax, 1
	jmp	.L6
.L5:
	mov	eax, 0
.L6:
	mov	DWORD PTR -16[rbp], eax
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 65
	je	.L7
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 69
	je	.L7
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 73
	je	.L7
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 79
	je	.L7
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 85
	jne	.L8
.L7:
	mov	eax, 1
	jmp	.L9
.L8:
	mov	eax, 0
.L9:
	mov	DWORD PTR -12[rbp], eax
	cmp	DWORD PTR -16[rbp], 0
	jne	.L10
	cmp	DWORD PTR -12[rbp], 0
	je	.L11
.L10:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	jmp	.L12
.L11:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L12:
	nop
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L13
	call	__stack_chk_fail@PLT
.L13:
	leave
	ret
	.size	cyqxorzbrxuh, .-cyqxorzbrxuh
	.section	.rodata
.LC4:
	.string	"%12s"
.LC5:
	.string	"You entered: %s\n"
	.text
	.globl	akqymshefhhe
	.type	akqymshefhhe, @function
akqymshefhhe:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 8027420523743700328
	mov	QWORD PTR -20[rbp], rax
	mov	DWORD PTR -12[rbp], 1679844463
	mov	DWORD PTR -24[rbp], 10
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -28[rbp], 0
	jmp	.L15
.L18:
	mov	eax, DWORD PTR -28[rbp]
	cdqe
	movzx	eax, BYTE PTR -20[rbp+rax]
	cmp	al, 10
	jne	.L16
	mov	eax, DWORD PTR -28[rbp]
	cdqe
	mov	BYTE PTR -20[rbp+rax], 0
	jmp	.L17
.L16:
	add	DWORD PTR -28[rbp], 1
.L15:
	mov	eax, DWORD PTR -28[rbp]
	cmp	eax, DWORD PTR -24[rbp]
	jle	.L18
.L17:
	lea	rax, -20[rbp]
	mov	rsi, rax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L19
	call	__stack_chk_fail@PLT
.L19:
	leave
	ret
	.size	akqymshefhhe, .-akqymshefhhe
	.section	.rodata
	.align 8
.LC6:
	.string	"Write some strings to concatenate!"
.LC7:
	.string	"Concatenated String %s\n"
	.text
	.globl	bimvvmxtypwo
	.type	bimvvmxtypwo, @function
bimvvmxtypwo:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -64[rbp], 4
	mov	DWORD PTR -68[rbp], 0
	jmp	.L21
.L22:
	lea	rax, .LC6[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -58[rbp]
	mov	esi, 10
	mov	rdi, rax
	call	fgets@PLT
	lea	rdx, -58[rbp]
	lea	rax, -48[rbp]
	mov	rsi, rdx
	mov	rdi, rax
	call	strcat@PLT
	add	DWORD PTR -68[rbp], 1
.L21:
	mov	eax, DWORD PTR -68[rbp]
	cmp	eax, DWORD PTR -64[rbp]
	jl	.L22
	lea	rax, -48[rbp]
	mov	rsi, rax
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L23
	call	__stack_chk_fail@PLT
.L23:
	leave
	ret
	.size	bimvvmxtypwo, .-bimvvmxtypwo
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
