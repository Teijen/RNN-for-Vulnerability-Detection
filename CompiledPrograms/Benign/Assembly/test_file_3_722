	.file	"test_file_3_722.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	qwumzdsvanfg
	mov	eax, 0
	call	vhmtfiqscpwh
	mov	eax, 0
	call	ahwkexxedycz
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
	.align 8
.LC0:
	.string	"Write a decimal number to convert:"
.LC1:
	.string	"%lld"
.LC2:
	.string	"%d as oct: %o\n"
	.text
	.globl	qwumzdsvanfg
	.type	qwumzdsvanfg, @function
qwumzdsvanfg:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -16[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	rdx, QWORD PTR -16[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	rsi, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	qwumzdsvanfg, .-qwumzdsvanfg
	.section	.rodata
.LC3:
	.string	"Enter number of rows: "
.LC4:
	.string	"%d"
.LC5:
	.string	"  "
.LC6:
	.string	"* "
	.text
	.globl	vhmtfiqscpwh
	.type	vhmtfiqscpwh, @function
vhmtfiqscpwh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -12[rbp], 0
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -24[rbp]
	mov	rsi, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -20[rbp], 1
	jmp	.L6
.L11:
	mov	DWORD PTR -16[rbp], 1
	jmp	.L7
.L8:
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	add	DWORD PTR -16[rbp], 1
.L7:
	mov	eax, DWORD PTR -24[rbp]
	sub	eax, DWORD PTR -20[rbp]
	cmp	DWORD PTR -16[rbp], eax
	jle	.L8
	jmp	.L9
.L10:
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	add	DWORD PTR -12[rbp], 1
.L9:
	mov	eax, DWORD PTR -20[rbp]
	add	eax, eax
	sub	eax, 1
	cmp	DWORD PTR -12[rbp], eax
	jne	.L10
	mov	edi, 10
	call	putchar@PLT
	add	DWORD PTR -20[rbp], 1
	mov	DWORD PTR -12[rbp], 0
.L6:
	mov	eax, DWORD PTR -24[rbp]
	cmp	DWORD PTR -20[rbp], eax
	jle	.L11
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	ret
	.size	vhmtfiqscpwh, .-vhmtfiqscpwh
	.section	.rodata
.LC7:
	.string	"%c "
	.text
	.globl	ahwkexxedycz
	.type	ahwkexxedycz, @function
ahwkexxedycz:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	BYTE PTR -1[rbp], 65
	jmp	.L14
.L15:
	movsx	eax, BYTE PTR -1[rbp]
	mov	esi, eax
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	movzx	eax, BYTE PTR -1[rbp]
	add	eax, 1
	mov	BYTE PTR -1[rbp], al
.L14:
	cmp	BYTE PTR -1[rbp], 90
	jle	.L15
	nop
	nop
	leave
	ret
	.size	ahwkexxedycz, .-ahwkexxedycz
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
