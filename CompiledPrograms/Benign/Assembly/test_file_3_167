	.file	"test_file_3_167.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	duinkpvfxhik
	mov	eax, 0
	call	cyqxorzbrxuh
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	edx, 10
	mov	esi, 0
	mov	rdi, rax
	call	strtol@PLT
	mov	edi, eax
	call	uygocbwhkdss
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter an integer: "
.LC1:
	.string	"%lld"
.LC2:
	.string	"Number of digits: %d\n"
	.text
	.globl	duinkpvfxhik
	.type	duinkpvfxhik, @function
duinkpvfxhik:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -20[rbp], 0
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -16[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	jmp	.L4
.L5:
	mov	rcx, QWORD PTR -16[rbp]
	movabs	rdx, 7378697629483820647
	mov	rax, rcx
	imul	rdx
	mov	rax, rdx
	sar	rax, 2
	sar	rcx, 63
	mov	rdx, rcx
	sub	rax, rdx
	mov	QWORD PTR -16[rbp], rax
	add	DWORD PTR -20[rbp], 1
.L4:
	mov	rax, QWORD PTR -16[rbp]
	test	rax, rax
	jne	.L5
	mov	eax, DWORD PTR -20[rbp]
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L6
	call	__stack_chk_fail@PLT
.L6:
	leave
	ret
	.size	duinkpvfxhik, .-duinkpvfxhik
	.section	.rodata
.LC3:
	.string	"Enter an alphabet: "
.LC4:
	.string	"%c"
.LC5:
	.string	"%c is a vowel."
.LC6:
	.string	"%c is a consonant."
	.text
	.globl	cyqxorzbrxuh
	.type	cyqxorzbrxuh, @function
cyqxorzbrxuh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -17[rbp]
	mov	rsi, rax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 97
	je	.L8
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 101
	je	.L8
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 105
	je	.L8
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 111
	je	.L8
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 117
	jne	.L9
.L8:
	mov	eax, 1
	jmp	.L10
.L9:
	mov	eax, 0
.L10:
	mov	DWORD PTR -16[rbp], eax
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 65
	je	.L11
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 69
	je	.L11
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 73
	je	.L11
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 79
	je	.L11
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 85
	jne	.L12
.L11:
	mov	eax, 1
	jmp	.L13
.L12:
	mov	eax, 0
.L13:
	mov	DWORD PTR -12[rbp], eax
	cmp	DWORD PTR -16[rbp], 0
	jne	.L14
	cmp	DWORD PTR -12[rbp], 0
	je	.L15
.L14:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	jmp	.L16
.L15:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L16:
	nop
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L17
	call	__stack_chk_fail@PLT
.L17:
	leave
	ret
	.size	cyqxorzbrxuh, .-cyqxorzbrxuh
	.section	.rodata
.LC7:
	.string	"N is larger than 10!"
.LC8:
	.string	"N less than or equal to 10!"
	.text
	.globl	uygocbwhkdss
	.type	uygocbwhkdss, @function
uygocbwhkdss:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	cmp	DWORD PTR -4[rbp], 10
	jle	.L19
	lea	rax, .LC7[rip]
	mov	rdi, rax
	call	puts@PLT
	jmp	.L21
.L19:
	lea	rax, .LC8[rip]
	mov	rdi, rax
	call	puts@PLT
.L21:
	nop
	leave
	ret
	.size	uygocbwhkdss, .-uygocbwhkdss
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
