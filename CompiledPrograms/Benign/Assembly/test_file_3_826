	.file	"test_file_3_826.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	cspvzrbidecv
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	atof@PLT
	pxor	xmm1, xmm1
	cvtsd2ss	xmm1, xmm0
	movd	eax, xmm1
	movd	xmm0, eax
	call	wgluyxdocdib
	mov	eax, 0
	call	oblihoqfkqvy
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter a character: "
.LC1:
	.string	"%c"
.LC2:
	.string	"%c is an alphabet.\n"
.LC3:
	.string	"%c is not an alphabet.\n"
	.text
	.globl	cspvzrbidecv
	.type	cspvzrbidecv, @function
cspvzrbidecv:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -9[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movzx	eax, BYTE PTR -9[rbp]
	cmp	al, 96
	jle	.L4
	movzx	eax, BYTE PTR -9[rbp]
	cmp	al, 122
	jle	.L5
.L4:
	movzx	eax, BYTE PTR -9[rbp]
	cmp	al, 64
	jle	.L6
	movzx	eax, BYTE PTR -9[rbp]
	cmp	al, 90
	jg	.L6
.L5:
	movzx	eax, BYTE PTR -9[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	jmp	.L7
.L6:
	movzx	eax, BYTE PTR -9[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L7:
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L8
	call	__stack_chk_fail@PLT
.L8:
	leave
	ret
	.size	cspvzrbidecv, .-cspvzrbidecv
	.section	.rodata
.LC4:
	.string	"How many decimals?"
.LC5:
	.string	"%d"
.LC6:
	.string	"New num %.*f\n"
	.text
	.globl	wgluyxdocdib
	.type	wgluyxdocdib, @function
wgluyxdocdib:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	movss	DWORD PTR -20[rbp], xmm0
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, -12[rbp]
	mov	rsi, rax
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	pxor	xmm1, xmm1
	cvtss2sd	xmm1, DWORD PTR -20[rbp]
	movq	rdx, xmm1
	mov	eax, DWORD PTR -12[rbp]
	movq	xmm0, rdx
	mov	esi, eax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L10
	call	__stack_chk_fail@PLT
.L10:
	leave
	ret
	.size	wgluyxdocdib, .-wgluyxdocdib
	.section	.rodata
.LC7:
	.string	"%d and %s\n"
	.text
	.globl	oblihoqfkqvy
	.type	oblihoqfkqvy, @function
oblihoqfkqvy:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -10[rbp]
	mov	esi, 2
	mov	rdi, rax
	call	fgets@PLT
	lea	rax, -10[rbp]
	mov	rdx, rax
	mov	esi, 2
	lea	rax, .LC7[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L12
	call	__stack_chk_fail@PLT
.L12:
	leave
	ret
	.size	oblihoqfkqvy, .-oblihoqfkqvy
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
