	.file	"test_file_3_897.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	xcbaqluvlilg
	mov	eax, 0
	call	eihjswapsybh
	mov	eax, 0
	call	cbwqtluqmpyh
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter your name :"
.LC1:
	.string	"final: %s %s"
	.text
	.globl	xcbaqluvlilg
	.type	xcbaqluvlilg, @function
xcbaqluvlilg:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 7453010381983019591
	movabs	rdx, 7867542457899884659
	mov	QWORD PTR -176[rbp], rax
	mov	QWORD PTR -168[rbp], rdx
	mov	DWORD PTR -160[rbp], 14963
	lea	rax, .LC0[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -144[rbp]
	mov	esi, 40
	mov	rdi, rax
	call	fgets@PLT
	lea	rcx, -144[rbp]
	lea	rdx, -176[rbp]
	lea	rax, -96[rbp]
	lea	rsi, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	sprintf@PLT
	lea	rax, -96[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	xcbaqluvlilg, .-xcbaqluvlilg
	.section	.rodata
	.align 8
.LC2:
	.string	"Write two numbers to multiply: "
.LC3:
	.string	"%d%d"
.LC4:
	.string	"Multiplied sum: %d\n"
	.text
	.globl	eihjswapsybh
	.type	eihjswapsybh, @function
eihjswapsybh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rdx, -12[rbp]
	lea	rax, -16[rbp]
	mov	rsi, rax
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	edx, DWORD PTR -16[rbp]
	mov	eax, DWORD PTR -12[rbp]
	imul	eax, edx
	mov	esi, eax
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
.L7:
	call	getchar@PLT
	mov	DWORD PTR -16[rbp], eax
	mov	eax, DWORD PTR -16[rbp]
	cmp	eax, 10
	je	.L6
	mov	eax, DWORD PTR -16[rbp]
	cmp	eax, -1
	jne	.L7
.L6:
	mov	eax, 0
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L9
	call	__stack_chk_fail@PLT
.L9:
	leave
	ret
	.size	eihjswapsybh, .-eihjswapsybh
	.section	.rodata
.LC5:
	.string	"Enter an integer: "
.LC6:
	.string	"%d"
	.align 8
.LC7:
	.string	"Error! Factorial of a negative number doesn't exist."
.LC8:
	.string	"Factorial of %d = %llu\n"
	.text
	.globl	cbwqtluqmpyh
	.type	cbwqtluqmpyh, @function
cbwqtluqmpyh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -16[rbp], 1
	lea	rax, .LC5[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -24[rbp]
	mov	rsi, rax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	eax, DWORD PTR -24[rbp]
	test	eax, eax
	jns	.L11
	lea	rax, .LC7[rip]
	mov	rdi, rax
	call	puts@PLT
	jmp	.L16
.L11:
	mov	DWORD PTR -20[rbp], 1
	jmp	.L13
.L14:
	mov	eax, DWORD PTR -20[rbp]
	cdqe
	mov	rdx, QWORD PTR -16[rbp]
	imul	rax, rdx
	mov	QWORD PTR -16[rbp], rax
	add	DWORD PTR -20[rbp], 1
.L13:
	mov	eax, DWORD PTR -24[rbp]
	cmp	DWORD PTR -20[rbp], eax
	jle	.L14
	mov	eax, DWORD PTR -24[rbp]
	mov	rdx, QWORD PTR -16[rbp]
	mov	esi, eax
	lea	rax, .LC8[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L16:
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L15
	call	__stack_chk_fail@PLT
.L15:
	leave
	ret
	.size	cbwqtluqmpyh, .-cbwqtluqmpyh
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
