	.file	"test_file_3_1402.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	lmhhgfjvthli
	mov	eax, 0
	call	oblihoqfkqvy
	mov	eax, 0
	call	havbqmnhsvpz
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter two integers: "
.LC1:
	.string	"%d %d"
.LC2:
	.string	"G.C.D of %d and %d is %d\n"
	.text
	.globl	lmhhgfjvthli
	.type	lmhhgfjvthli, @function
lmhhgfjvthli:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rdx, -20[rbp]
	lea	rax, -24[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	mov	DWORD PTR -16[rbp], 1
	jmp	.L4
.L7:
	mov	eax, DWORD PTR -24[rbp]
	cdq
	idiv	DWORD PTR -16[rbp]
	mov	eax, edx
	test	eax, eax
	jne	.L5
	mov	eax, DWORD PTR -20[rbp]
	cdq
	idiv	DWORD PTR -16[rbp]
	mov	eax, edx
	test	eax, eax
	jne	.L5
	mov	eax, DWORD PTR -16[rbp]
	mov	DWORD PTR -12[rbp], eax
.L5:
	add	DWORD PTR -16[rbp], 1
.L4:
	mov	eax, DWORD PTR -24[rbp]
	cmp	DWORD PTR -16[rbp], eax
	jg	.L6
	mov	eax, DWORD PTR -20[rbp]
	cmp	DWORD PTR -16[rbp], eax
	jle	.L7
.L6:
	mov	edx, DWORD PTR -20[rbp]
	mov	eax, DWORD PTR -24[rbp]
	mov	ecx, DWORD PTR -12[rbp]
	mov	esi, eax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L8
	call	__stack_chk_fail@PLT
.L8:
	leave
	ret
	.size	lmhhgfjvthli, .-lmhhgfjvthli
	.section	.rodata
.LC3:
	.string	"%d and %s\n"
	.text
	.globl	oblihoqfkqvy
	.type	oblihoqfkqvy, @function
oblihoqfkqvy:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -10[rbp]
	mov	esi, 2
	mov	rdi, rax
	call	fgets@PLT
	lea	rax, -10[rbp]
	mov	rdx, rax
	mov	esi, 2
	lea	rax, .LC3[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L10
	call	__stack_chk_fail@PLT
.L10:
	leave
	ret
	.size	oblihoqfkqvy, .-oblihoqfkqvy
	.section	.rodata
.LC4:
	.string	"After concatenation: "
	.text
	.globl	havbqmnhsvpz
	.type	havbqmnhsvpz, @function
havbqmnhsvpz:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 7885065666585129584
	mov	edx, 543649385
	mov	QWORD PTR -112[rbp], rax
	mov	QWORD PTR -104[rbp], rdx
	mov	QWORD PTR -96[rbp], 0
	mov	QWORD PTR -88[rbp], 0
	mov	QWORD PTR -80[rbp], 0
	mov	QWORD PTR -72[rbp], 0
	mov	QWORD PTR -64[rbp], 0
	mov	QWORD PTR -56[rbp], 0
	mov	QWORD PTR -48[rbp], 0
	mov	QWORD PTR -40[rbp], 0
	mov	QWORD PTR -32[rbp], 0
	mov	QWORD PTR -24[rbp], 0
	mov	DWORD PTR -16[rbp], 0
	movabs	rax, 8030874123936756585
	mov	QWORD PTR -123[rbp], rax
	mov	WORD PTR -115[rbp], 25965
	mov	BYTE PTR -113[rbp], 0
	mov	DWORD PTR -132[rbp], 0
	jmp	.L12
.L13:
	add	DWORD PTR -132[rbp], 1
.L12:
	mov	eax, DWORD PTR -132[rbp]
	cdqe
	movzx	eax, BYTE PTR -112[rbp+rax]
	test	al, al
	jne	.L13
	mov	DWORD PTR -128[rbp], 0
	jmp	.L14
.L15:
	mov	eax, DWORD PTR -128[rbp]
	cdqe
	movzx	edx, BYTE PTR -123[rbp+rax]
	mov	eax, DWORD PTR -132[rbp]
	cdqe
	mov	BYTE PTR -112[rbp+rax], dl
	add	DWORD PTR -128[rbp], 1
	add	DWORD PTR -132[rbp], 1
.L14:
	mov	eax, DWORD PTR -128[rbp]
	cdqe
	movzx	eax, BYTE PTR -123[rbp+rax]
	test	al, al
	jne	.L15
	mov	eax, DWORD PTR -132[rbp]
	cdqe
	mov	BYTE PTR -112[rbp+rax], 0
	lea	rax, .LC4[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -112[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L16
	call	__stack_chk_fail@PLT
.L16:
	leave
	ret
	.size	havbqmnhsvpz, .-havbqmnhsvpz
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
