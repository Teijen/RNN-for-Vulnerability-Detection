	.file	"test_file_3_844.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	qjudcbmgomgp
	mov	eax, 0
	call	qekjcxmkxvgo
	mov	eax, 0
	call	ahwkexxedycz
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Length of the string: %d\n"
	.text
	.globl	qjudcbmgomgp
	.type	qjudcbmgomgp, @function
qjudcbmgomgp:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	QWORD PTR -24[rbp], rdi
	mov	DWORD PTR -4[rbp], 0
	jmp	.L4
.L5:
	add	DWORD PTR -4[rbp], 1
.L4:
	mov	eax, DWORD PTR -4[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -24[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L5
	mov	eax, DWORD PTR -4[rbp]
	mov	esi, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	nop
	leave
	ret
	.size	qjudcbmgomgp, .-qjudcbmgomgp
	.section	.rodata
.LC1:
	.string	"the"
.LC2:
	.string	"a"
.LC3:
	.string	"one"
.LC4:
	.string	"string"
.LC5:
	.string	"any"
	.text
	.globl	qekjcxmkxvgo
	.type	qekjcxmkxvgo, @function
qekjcxmkxvgo:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -18[rbp], 0
	mov	WORD PTR -10[rbp], 0
	lea	rax, .LC1[rip]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, .LC2[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, .LC3[rip]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, .LC4[rip]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, .LC5[rip]
	mov	QWORD PTR -32[rbp], rax
	lea	rax, -72[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, 1717986919
	shr	rdx, 32
	sar	edx
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -68[rbp], edx
	mov	ecx, DWORD PTR -68[rbp]
	mov	edx, ecx
	sal	edx, 2
	add	edx, ecx
	sub	eax, edx
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -68[rbp]
	cdqe
	mov	rcx, QWORD PTR -64[rbp+rax*8]
	lea	rax, -18[rbp]
	mov	edx, 10
	mov	rsi, rcx
	mov	rdi, rax
	call	strncpy@PLT
	lea	rax, -18[rbp]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -18[rbp]
	mov	esi, 10
	mov	rdi, rax
	call	fgets@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L7
	call	__stack_chk_fail@PLT
.L7:
	leave
	ret
	.size	qekjcxmkxvgo, .-qekjcxmkxvgo
	.section	.rodata
.LC6:
	.string	"%c "
	.text
	.globl	ahwkexxedycz
	.type	ahwkexxedycz, @function
ahwkexxedycz:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	BYTE PTR -1[rbp], 65
	jmp	.L9
.L10:
	movsx	eax, BYTE PTR -1[rbp]
	mov	esi, eax
	lea	rax, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	movzx	eax, BYTE PTR -1[rbp]
	add	eax, 1
	mov	BYTE PTR -1[rbp], al
.L9:
	cmp	BYTE PTR -1[rbp], 90
	jle	.L10
	nop
	nop
	leave
	ret
	.size	ahwkexxedycz, .-ahwkexxedycz
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
