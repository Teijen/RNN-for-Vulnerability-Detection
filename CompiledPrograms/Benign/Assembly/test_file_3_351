	.file	"test_file_3_351.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	qekjcxmkxvgo
	mov	rax, QWORD PTR -16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdi, rax
	call	uwiupxnrjawx
	mov	eax, 0
	call	xcbaqluvlilg
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"the"
.LC1:
	.string	"a"
.LC2:
	.string	"one"
.LC3:
	.string	"string"
.LC4:
	.string	"any"
	.text
	.globl	qekjcxmkxvgo
	.type	qekjcxmkxvgo, @function
qekjcxmkxvgo:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	QWORD PTR -18[rbp], 0
	mov	WORD PTR -10[rbp], 0
	lea	rax, .LC0[rip]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, .LC1[rip]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, .LC2[rip]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, .LC3[rip]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, .LC4[rip]
	mov	QWORD PTR -32[rbp], rax
	lea	rax, -72[rbp]
	mov	rdi, rax
	mov	eax, 0
	call	time@PLT
	mov	edi, eax
	call	srand@PLT
	call	rand@PLT
	movsx	rdx, eax
	imul	rdx, rdx, 1717986919
	shr	rdx, 32
	sar	edx
	mov	ecx, eax
	sar	ecx, 31
	sub	edx, ecx
	mov	DWORD PTR -68[rbp], edx
	mov	ecx, DWORD PTR -68[rbp]
	mov	edx, ecx
	sal	edx, 2
	add	edx, ecx
	sub	eax, edx
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -68[rbp]
	cdqe
	mov	rcx, QWORD PTR -64[rbp+rax*8]
	lea	rax, -18[rbp]
	mov	edx, 10
	mov	rsi, rcx
	mov	rdi, rax
	call	strncpy@PLT
	lea	rax, -18[rbp]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -18[rbp]
	mov	esi, 10
	mov	rdi, rax
	call	fgets@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L4
	call	__stack_chk_fail@PLT
.L4:
	leave
	ret
	.size	qekjcxmkxvgo, .-qekjcxmkxvgo
	.globl	uwiupxnrjawx
	.type	uwiupxnrjawx, @function
uwiupxnrjawx:
	endbr64
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 40
	mov	QWORD PTR -40[rbp], rdi
	mov	DWORD PTR -28[rbp], 10
	mov	DWORD PTR -24[rbp], 20
	mov	edx, DWORD PTR -28[rbp]
	mov	eax, DWORD PTR -24[rbp]
	add	eax, edx
	mov	DWORD PTR -20[rbp], eax
	mov	DWORD PTR -32[rbp], 0
	jmp	.L6
.L7:
	mov	eax, DWORD PTR -32[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edi, eax
	call	putchar@PLT
	add	DWORD PTR -32[rbp], 1
.L6:
	mov	eax, DWORD PTR -32[rbp]
	movsx	rbx, eax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdi, rax
	call	strlen@PLT
	cmp	rbx, rax
	jb	.L7
	mov	edi, 10
	call	putchar@PLT
	nop
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.size	uwiupxnrjawx, .-uwiupxnrjawx
	.section	.rodata
.LC5:
	.string	"Enter your name :"
.LC6:
	.string	"final: %s %s"
	.text
	.globl	xcbaqluvlilg
	.type	xcbaqluvlilg, @function
xcbaqluvlilg:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	movabs	rax, 7453010381983019591
	movabs	rdx, 7867542457899884659
	mov	QWORD PTR -176[rbp], rax
	mov	QWORD PTR -168[rbp], rdx
	mov	DWORD PTR -160[rbp], 14963
	lea	rax, .LC5[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -144[rbp]
	mov	esi, 40
	mov	rdi, rax
	call	fgets@PLT
	lea	rcx, -144[rbp]
	lea	rdx, -176[rbp]
	lea	rax, -96[rbp]
	lea	rsi, .LC6[rip]
	mov	rdi, rax
	mov	eax, 0
	call	sprintf@PLT
	lea	rax, -96[rbp]
	mov	rdi, rax
	call	puts@PLT
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L9
	call	__stack_chk_fail@PLT
.L9:
	leave
	ret
	.size	xcbaqluvlilg, .-xcbaqluvlilg
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
