	.file	"test_file_3_964.c"
	.intel_syntax noprefix
	.text
	.globl	main
	.type	main, @function
main:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 16
	mov	DWORD PTR -4[rbp], edi
	mov	QWORD PTR -16[rbp], rsi
	mov	eax, 0
	call	ycumhbjkobjs
	mov	eax, 0
	call	uhixokfdnayx
	mov	eax, 0
	call	cyqxorzbrxuh
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
.LC0:
	.string	"Enter three numbers: "
.LC1:
	.string	"%lf %lf %lf"
.LC2:
	.string	"%.2lf is the largest number."
	.text
	.globl	ycumhbjkobjs
	.type	ycumhbjkobjs, @function
ycumhbjkobjs:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC0[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rcx, -16[rbp]
	lea	rdx, -24[rbp]
	lea	rax, -32[rbp]
	mov	rsi, rax
	lea	rax, .LC1[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movsd	xmm0, QWORD PTR -32[rbp]
	movsd	xmm1, QWORD PTR -24[rbp]
	comisd	xmm0, xmm1
	jb	.L15
	movsd	xmm0, QWORD PTR -32[rbp]
	movsd	xmm1, QWORD PTR -16[rbp]
	comisd	xmm0, xmm1
	jb	.L16
	mov	rax, QWORD PTR -32[rbp]
	movq	xmm0, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	jmp	.L18
.L16:
	mov	rax, QWORD PTR -16[rbp]
	movq	xmm0, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	jmp	.L18
.L15:
	movsd	xmm0, QWORD PTR -24[rbp]
	movsd	xmm1, QWORD PTR -16[rbp]
	comisd	xmm0, xmm1
	jb	.L17
	mov	rax, QWORD PTR -24[rbp]
	movq	xmm0, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
	jmp	.L18
.L17:
	mov	rax, QWORD PTR -16[rbp]
	movq	xmm0, rax
	lea	rax, .LC2[rip]
	mov	rdi, rax
	mov	eax, 1
	call	printf@PLT
.L18:
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L11
	call	__stack_chk_fail@PLT
.L11:
	leave
	ret
	.size	ycumhbjkobjs, .-ycumhbjkobjs
	.section	.rodata
.LC3:
	.string	"hello"
.LC4:
	.string	"theese "
.LC5:
	.string	"are "
.LC6:
	.string	"just"
.LC7:
	.string	"strings"
	.align 8
.LC8:
	.string	"Write some strings, 40 letters only!"
.LC9:
	.string	"You wrote: %s\n"
	.text
	.globl	uhixokfdnayx
	.type	uhixokfdnayx, @function
uhixokfdnayx:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	mov	DWORD PTR -52[rbp], 4
	lea	rax, .LC3[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC4[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC5[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC6[rip]
	mov	rdi, rax
	call	puts@PLT
	lea	rax, .LC7[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	DWORD PTR -56[rbp], 0
	jmp	.L20
.L21:
	lea	rax, .LC8[rip]
	mov	rdi, rax
	call	puts@PLT
	mov	rdx, QWORD PTR stdin[rip]
	lea	rax, -48[rbp]
	mov	esi, 40
	mov	rdi, rax
	call	fgets@PLT
	lea	rax, -48[rbp]
	mov	rsi, rax
	lea	rax, .LC9[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	add	DWORD PTR -56[rbp], 1
.L20:
	mov	eax, DWORD PTR -56[rbp]
	cmp	eax, DWORD PTR -52[rbp]
	jl	.L21
	nop
	mov	rax, QWORD PTR -8[rbp]
	sub	rax, QWORD PTR fs:40
	je	.L22
	call	__stack_chk_fail@PLT
.L22:
	leave
	ret
	.size	uhixokfdnayx, .-uhixokfdnayx
	.section	.rodata
.LC10:
	.string	"Enter an alphabet: "
.LC11:
	.string	"%c"
.LC12:
	.string	"%c is a vowel."
.LC13:
	.string	"%c is a consonant."
	.text
	.globl	cyqxorzbrxuh
	.type	cyqxorzbrxuh, @function
cyqxorzbrxuh:
	endbr64
	push	rbp
	mov	rbp, rsp
	sub	rsp, 32
	mov	rax, QWORD PTR fs:40
	mov	QWORD PTR -8[rbp], rax
	xor	eax, eax
	lea	rax, .LC10[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	lea	rax, -17[rbp]
	mov	rsi, rax
	lea	rax, .LC11[rip]
	mov	rdi, rax
	mov	eax, 0
	call	__isoc99_scanf@PLT
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 97
	je	.L24
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 101
	je	.L24
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 105
	je	.L24
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 111
	je	.L24
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 117
	jne	.L25
.L24:
	mov	eax, 1
	jmp	.L26
.L25:
	mov	eax, 0
.L26:
	mov	DWORD PTR -16[rbp], eax
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 65
	je	.L27
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 69
	je	.L27
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 73
	je	.L27
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 79
	je	.L27
	movzx	eax, BYTE PTR -17[rbp]
	cmp	al, 85
	jne	.L28
.L27:
	mov	eax, 1
	jmp	.L29
.L28:
	mov	eax, 0
.L29:
	mov	DWORD PTR -12[rbp], eax
	cmp	DWORD PTR -16[rbp], 0
	jne	.L30
	cmp	DWORD PTR -12[rbp], 0
	je	.L31
.L30:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC12[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
	jmp	.L32
.L31:
	movzx	eax, BYTE PTR -17[rbp]
	movsx	eax, al
	mov	esi, eax
	lea	rax, .LC13[rip]
	mov	rdi, rax
	mov	eax, 0
	call	printf@PLT
.L32:
	nop
	mov	rdx, QWORD PTR -8[rbp]
	sub	rdx, QWORD PTR fs:40
	je	.L33
	call	__stack_chk_fail@PLT
.L33:
	leave
	ret
	.size	cyqxorzbrxuh, .-cyqxorzbrxuh
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
