main: push rbp mov rbp, rsp sub rsp, 32 mov DWORD PTR -20[rbp], edi mov QWORD PTR -32[rbp], rsi mov eax, 0 call fgetsWithReturnAndSmallArray mov eax, 0 call mulTwoFloat mov DWORD PTR -4[rbp], eax mov rax, QWORD PTR -32[rbp] add rax, 8 mov rax, QWORD PTR [rax] mov rdi, rax call inputStrCat mov eax, 0 leave retfgetsWithReturnAndSmallArray: push rbp mov rbp, rsp sub rsp, 96 mov rax, QWORD PTR fs:40 mov QWORD PTR -8[rbp], rax xor eax, eax mov esi, 4 lea rdi, .LC0[rip] mov eax, 0 call printf@PLT mov rdx, QWORD PTR stdin[rip] lea rax, -96[rbp] mov esi, 80 mov rdi, rax call fgets@PLT mov eax, 0 mov rcx, QWORD PTR -8[rbp] xor rcx, QWORD PTR fs:40 je .L5 call __stack_chk_fail@PLT.L5: leave retmulTwoFloat: push rbp mov rbp, rsp sub rsp, 48 mov rax, QWORD PTR fs:40 mov QWORD PTR -8[rbp], rax xor eax, eax lea rdi, .LC1[rip] mov eax, 0 call printf@PLT lea rdx, -24[rbp] lea rax, -32[rbp] mov rsi, rax lea rdi, .LC2[rip] mov eax, 0 call __isoc99_scanf@PLT movsd xmm1, QWORD PTR -32[rbp] movsd xmm0, QWORD PTR -24[rbp] mulsd xmm0, xmm1 movsd QWORD PTR -16[rbp], xmm0 mov rax, QWORD PTR -16[rbp] mov QWORD PTR -40[rbp], rax movsd xmm0, QWORD PTR -40[rbp] lea rdi, .LC3[rip] mov eax, 1 call printf@PLT mov eax, 0 mov rcx, QWORD PTR -8[rbp] xor rcx, QWORD PTR fs:40 je .L8 call __stack_chk_fail@PLT.L8: leave retinputStrCat: push rbp mov rbp, rsp push r14 push r13 push r12 push rbx sub rsp, 96 mov QWORD PTR -104[rbp], rdi mov rax, QWORD PTR fs:40 mov QWORD PTR -40[rbp], rax xor eax, eax mov rax, rsp mov r12, rax movabs rax, 2338328219631577172 movabs rdx, 5989915543374930017 mov QWORD PTR -64[rbp], rax mov QWORD PTR -56[rbp], rdx mov DWORD PTR -48[rbp], 1852404340 mov rax, QWORD PTR -104[rbp] mov rdi, rax call strlen@PLT mov rdx, rax sub rdx, 1 mov QWORD PTR -80[rbp], rdx mov QWORD PTR -128[rbp], rax mov QWORD PTR -120[rbp], 0 mov r13, rax mov r14d, 0 mov edx, 16 sub rdx, 1 add rax, rdx mov ecx, 16 mov edx, 0 div rcx imul rax, rax, 16 sub rsp, rax mov rax, rsp add rax, 0 mov QWORD PTR -72[rbp], rax mov DWORD PTR -84[rbp], 0 jmp .L10.L11: mov eax, DWORD PTR -84[rbp] movsx rdx, eax mov rax, QWORD PTR -72[rbp] add rax, rdx mov edx, 1 mov esi, 65 mov rdi, rax call memset@PLT add DWORD PTR -84[rbp], 1.L10: mov eax, DWORD PTR -84[rbp] movsx rbx, eax mov rax, QWORD PTR -72[rbp] mov rdi, rax call strlen@PLT cmp rbx, rax jb .L11 mov rax, QWORD PTR -72[rbp] mov rdi, rax call puts@PLT mov rax, QWORD PTR -72[rbp] mov rdx, QWORD PTR -104[rbp] mov rsi, rdx mov rdi, rax call strcat@PLT mov rsp, r12 nop mov rax, QWORD PTR -40[rbp] xor rax, QWORD PTR fs:40 je .L12 call __stack_chk_fail@PLT.L12: lea rsp, -32[rbp] pop rbx pop r12 pop r13 pop r14 pop rbp ret