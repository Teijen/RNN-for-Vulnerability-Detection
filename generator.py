"""
REGEX:

*Get all lines ending with ';':
.+?;

can add a ';' to each function declaration and use this:
.+?;(?=;){2}

will then not include the last

*Get all functions:

 .*\(.*\).*\{(.|\n)*?\n\}

 or

.*\{(.|\n)*?}


"""
#!/usr/bin/env python3
def writeToFile(s1):

    ''' Create and write to new file '''
    f = open("test_file.c", "w+")
    for i in range(len(s1)):
        f.write(s1[i])
    f.close()

def readVulnerability():

    ''' read from the vulnerability lib '''
    declarations = []
    f = open("vulnerabilityLib.c", "r")
    if f.mode == 'r':
        line = f.readlines()
        print(line)

        ''' find indexes where the function declacations recide'''
        start_function_declaration = line.index('/*Start declalaction*/\n') + 1
        end_function_declaration = line.index('/*End declalaction*/\n') 
        print(start_function_declaration, end_function_declaration)
        for i in range(start_function_declaration,end_function_declaration):
            print(i)
            declarations.append(line[i])
        return declarations

if __name__=="__main__":

    headerString = '#include <stdio.h>\n#include <string.h>\n'
    decl = readVulnerability()
    writeToFile(decl)